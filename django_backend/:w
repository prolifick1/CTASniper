import React from "react";
import Card from 'react-bootstrap/Card'
import { useState } from 'react';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faCoffee, faPersonWalking } from '@fortawesome/free-solid-svg-icons'
import axios from 'axios';




export default function MapCard(props) {
  const [placeCoords, setPlaceCoords] = useState({});
  const [stationsList, setStationsList] = useState([]);
  const [arrival, setArrival] = useState('Click for next arrival')
  const [place, setPlace] = useState('');
  
  {/* const [isClosed, setClosed] = useState('closed')
    const handleToggle = () => {
      setClosed(!isClosed);
    } 
  */}
  const updateArrival = async() => {
    updateStations().then((stationsList) => {
      console.log(stationsList);
    })
    const response = await axios.get('/get_train_data')
    console.log('train data:', response.data)
    let newArrival = response.data.ctatt.eta[0].arrT;
    setArrival(newArrival);
    console.log('updating arrival:', newArrival)
    let now = new Date(Date.now())
    let newArrivalObj = new Date(newArrival);
    console.log('ETA (sec): ', (newArrivalObj - now)/1000) 
  }


  //query api, if newArrivalObj changed, update

  //migiht have to use a useEffect hook that synchronizes countdown timer to
  //changing state of newArrivalObj - now

  const updatePlace = async() => {
    console.log('print from mapComponent')

    let input_address = document.getElementById('input_address').value;
    try {
      await axios.get('/get_place', { params : { query: input_address  }})
      .then((response) => {
        let placeCoords = { lat: String(response.data.results[0].geometry.location.lat), lng : String(response.data.results[0].geometry.location.lng) }
        setPlaceCoords(placeCoords);
        console.log('placeCoords', placeCoords)
      })
    } catch {
      console.log('error getting place')
    }         
  }
  
const updateStations = async() => {
  try{
    await axios.get('/get_stations').then((response) => {
        console.log('got stations:', response);
        setStationsList(response);
     })
  } catch {
    console.log('error getting stations');
  }
}
  const calculateWalk = async(originCoords, destinationCoords) => {
    console.log('station: ', originCoords, 'place: ', destinationCoords);
    axios.get('/calculate_walk', { params: { originCoords: originCoords, destinationCoords: destinationCoords } })
    .then((response) => {
      console.log(response)
      console.log('Google walk time (sec):', response.data.routes[0].legs[0].duration.value)
    })
  }
  // use stations api
  // save fav place to db
  // update place results below
  // UI: add svgs to search boxes
  // UI: black border on focus, 
  return(
  <div className="card-container container" style={{width: '25rem'}}>
      <Card id="data-harvester" bg="white">
        <Card.Body>
          <h1>What is your departure location ?</h1>
          <div>
            <input id='input_address' value='3654 S Paulina St' placeholder="Search Your Location"></input>
            <button onClick={ updatePlace }>
              click for place
            </button>
          </div>
          <div>
            <button onClick={ updateArrival } > 
              ETA: {arrival} 
            </button>
          </div>
          <div>
            <p>Calculate Walk Time</p>
            <button onClick={ () => calculateWalk(stationCoords, placeCoords) }>
              calculate walk time
            </button>
          </div>
          <hr />
        </Card.Body>
      </Card>
    {/*
    <div className="row d-flex">
      <div className="col-md-12">
        <div className="card map-card" style={{ width: '100%' }}>
          <div className={`card-body`}>
            <div className="button px-2 mt-3">
              <a className="btn-floating btn-lg living-coral float-right">
                <FontAwesomeIcon icon={faPersonWalking} size="xl" ></FontAwesomeIcon>
              </a>
            </div>
            <div className="bg-white px-4 pb-4 pt-3-5">
              <h5 className="card-title h5 living-coral-text">Central Park Zoo</h5>
              <div className="d-flex justify-content-between living-coral-text">
                <h6 className="card-subtitle font-weight-light">A place to relax</h6>
                <FontAwesomeIcon icon={faCoffee} />
                <h6 className="font-small font-weight-light mt-n1">25 min</h6>
              </div>
              <hr />
              <div className="d-flex justify-content-between pt-2 mt-1 text-center text-uppercase living-coral-text">
                <div>
                  <FontAwesomeIcon icon={faCoffee} size="lg" />
                  <i className="fas fa-phone fa-lg mb-3"></i>
                  <p className="mb-0">Call</p>
                </div>
                <div>
                  <i className="fas fa-cat fa-lg mb-3"></i>
                  <p className="mb-0">Love</p>
                </div>
                <div>
                  <i className="far fa-grin-beam-sweat fa-lg mb-3"></i>
                  <p className="mb-0">Smile</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    */}
  </div> 
  )
}
